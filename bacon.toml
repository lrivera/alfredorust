# bacon.toml
# Default: corre verificación rápida. Si prefieres que arranque el server, cambia a "run-long".
default_job = "check"
env.CARGO_TERM_COLOR = "always"

[jobs.check]
command = ["cargo", "check"]
need_stdout = false

[jobs.check-all]
command = ["cargo", "check", "--all-targets"]
need_stdout = false

[jobs.clippy]
command = ["cargo", "clippy"]
need_stdout = false

[jobs.clippy-all]
command = ["cargo", "clippy", "--all-targets"]
need_stdout = false

[jobs.pedantic]
command = [
  "cargo", "clippy",
  "--",
  "-W", "clippy::pedantic",
]
need_stdout = false

[jobs.test]
command = ["cargo", "test"]
need_stdout = true

[jobs.nextest]
command = [
  "cargo", "nextest", "run",
  "--hide-progress-bar", "--failure-output", "final"
]
need_stdout = true
analyzer = "nextest"

[jobs.doc]
command = ["cargo", "doc", "--no-deps"]
need_stdout = false

[jobs.doc-open]
command = ["cargo", "doc", "--no-deps", "--open"]
need_stdout = false
on_success = "back"

# --- Tus jobs de ejecución con watch y color ---

# Para ejecuciones cortas (terminan solas). Mantiene la salida visible.
[jobs.run]
command = ["cargo", "run", "--color", "always"]
need_stdout = true
allow_warnings = true
background = true
watch = ["src", "Cargo.toml", ".env"]

# Para tu server Axum (proceso largo). Reinicia en caliente al cambiar archivos.
[jobs.run-long]
command = ["cargo", "run", "--color", "always"]
need_stdout = true
allow_warnings = true
background = false
on_change_strategy = "kill_then_restart"
watch = ["src", "Cargo.toml", ".env"]
# Si algún día hace falta matar hijos manualmente en tu SO, descomenta:
# kill = ["pkill", "-TERM", "-P"]

# Ejecutar examples si los usas
[jobs.ex]
command = ["cargo", "run", "--example"]
need_stdout = true
allow_warnings = true

[keybindings]
# 'c' corre clippy en todos los targets
c = "job:clippy-all"
p = "job:pedantic"
# si usas mucho el server, puedes mapear 'r' a run-long:
# r = "job:run-long"
